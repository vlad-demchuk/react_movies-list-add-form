{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","titleHasError","setTitleHasError","setDescription","setImgUrl","imgUrlHasError","setImgUrlHasError","setImdbUrl","imdbUrlHasError","setImdbUrlHasError","setImdbId","imdbIdHasError","setImdbIdHasError","regExp","checkUrl","inputToCheck","test","onSubmit","event","preventDefault","type","classNames","inputError","name","placeholder","value","onChange","target","maxLength","App","moviesFromServer","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff7dd04d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Movie } from '../../react-app-env';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\nimport { AddMovie } from '../../react-app-env';\n\ntype Props = {\n  onAdd: AddMovie,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [titleHasError, setTitleHasError] = useState(false);\n\n  const [description, setDescription] = useState('');\n\n  const [imgUrl, setImgUrl] = useState('');\n  const [imgUrlHasError, setImgUrlHasError] = useState(false);\n\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbUrlHasError, setImdbUrlHasError] = useState(false);\n\n  const [imdbId, setImdbId] = useState('');\n  const [imdbIdHasError, setImdbIdHasError] = useState(false);\n\n  // eslint-disable-next-line max-len\n  const [regExp] = useState(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n  const checkUrl = (inputToCheck: string) => !regExp.test(inputToCheck);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleHasError(false);\n  };\n\n  const handleDescription = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setDescription(event.target.value);\n  };\n\n  const handleImgUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImgUrl(event.target.value);\n    setImgUrlHasError(checkUrl(imgUrl));\n  };\n\n  const handleImdbUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImdbUrl(event.target.value);\n    setImdbUrlHasError(checkUrl(imgUrl));\n  };\n\n  const handleImdbId = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImdbId(event.target.value);\n    setImdbIdHasError(false);\n  };\n\n  const handleSumbit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    setTitleHasError(!title);\n    setImdbIdHasError(!imdbId);\n\n    setImgUrlHasError(checkUrl(imgUrl));\n    setImdbUrlHasError(checkUrl(imdbUrl));\n\n    if (title && imgUrl && !checkUrl(imgUrl) && !checkUrl(imdbUrl)) {\n      onAdd(movie);\n\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSumbit}\n    >\n      <h2 className=\"title\">Add a new movie</h2>\n\n      <label className=\"label\">\n        <h3>\n          Title\n        </h3>\n\n        <input\n          type=\"text\"\n          className={classNames('input', { inputError: titleHasError })}\n          name=\"title\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitle}\n        />\n        {titleHasError && (\n          <p className=\"help is-danger\">Enter a title</p>\n        )}\n      </label>\n\n      <label className=\"label\">\n        <h3>Description</h3>\n        <textarea\n          name=\"description\"\n          className=\"description textarea\"\n          placeholder=\"Enter a description\"\n          maxLength={500}\n          value={description}\n          onChange={handleDescription}\n        />\n      </label>\n\n      <label className=\"label\">\n        <h3>\n          Image\n        </h3>\n\n        <input\n          type=\"text\"\n          className={classNames('input', { inputError: imgUrlHasError })}\n          name=\"imgUrl\"\n          placeholder=\"Enter an imgUrl\"\n          value={imgUrl}\n          onChange={handleImgUrl}\n        />\n        {imgUrlHasError && (\n          <p className=\"help is-danger\">Enter a correct imgUrl</p>\n        )}\n      </label>\n\n      <label className=\"label\">\n        <h3>\n          IMDB\n        </h3>\n\n        <input\n          type=\"text\"\n          className={classNames('input', { inputError: imdbUrlHasError })}\n          name=\"imdbUrl\"\n          placeholder=\"Enter an imdbUrl\"\n          value={imdbUrl}\n          onChange={handleImdbUrl}\n        />\n        {imdbUrlHasError && (\n          <p className=\"help is-danger\">Enter a correct imdbUrl</p>\n        )}\n      </label>\n\n      <label className=\"label\">\n        <h3>\n          IMDB ID\n        </h3>\n\n        <input\n          type=\"text\"\n          className={classNames('input', { inputError: imdbIdHasError })}\n          name=\"imdbId\"\n          placeholder=\"Enter an IMDB ID\"\n          value={imdbId}\n          onChange={handleImdbId}\n        />\n        {imdbIdHasError && (\n          <p className=\"help is-danger\">Enter an IMDB ID</p>\n        )}\n      </label>\n\n      <button\n        type=\"submit\"\n        className=\"button is-link\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { AddMovie, Movie } from './react-app-env';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie: AddMovie = (movie) => {\n    setMovies((currentMovies) => [...currentMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}